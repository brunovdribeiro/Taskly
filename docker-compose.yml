services:
  redis:
    image: redis/redis-stack:latest
    ports:
      - "6379:6379"
      - "8001:8001"
    volumes:
      - redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: taskmanager
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  
  eventstore:
    image: eventstore/eventstore:22.10.1-buster-slim
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    ports:
      - "1113:1113"
      - "2113:2113"
    volumes:
      - eventstore-data:/var/lib/eventstore
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:2113/health/live || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 5
  
  splunk:
    image: splunk/splunk:latest
    platform: linux/amd64
    environment:
      - SPLUNK_START_ARGS=--accept-license --no-prompt --enable-otel
      - SPLUNK_PASSWORD=password
      - SPLUNK_HEC_TOKEN=aba97acc-a475-4954-a711-bd16b04b6f78
      - SPLUNK_HEC_ENABLE=true
      - SPLUNK_ENABLE_LISTEN=9997
      - OTEL_SERVICE_NAME=Taskly
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://0.0.0.0:4318
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - SPLUNK_ENABLE_OTEL=true
      - SPLUNK_HTTP_ENABLESSL=false
      - SPLUNK_HEC_PORT=8088
      - SPLUNK_S2S_PORT=9997
      - SPLUNK_METRICS_ENABLE=true
    ports:
      - "8000:8000"   # Web UI
      - "8088:8088"   # HEC
      - "4318:4318"   # OTLP
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000" ]
      interval: 5s
      timeout: 5s
      retries: 5

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    healthcheck:
      test: [ "CMD-SHELL", "wget -q --spider http://localhost:3000/api/health || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  redis-data:
  redis-insight-data:
  postgres-data:
  eventstore-data:
  splunk_data:
  splunk_etc:
  grafana_data: