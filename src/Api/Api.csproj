<Project Sdk="Microsoft.NET.Sdk.Web">
    <PropertyGroup>
        <TargetFramework>net9.0</TargetFramework>
        <Nullable>enable</Nullable>
        <ImplicitUsings>enable</ImplicitUsings>
        <SpaRoot>..\Frontend\</SpaRoot>
        <SpaProxyLaunchCommand>npm run dev</SpaProxyLaunchCommand>
        <SpaProxyServerUrl>https://localhost:5173</SpaProxyServerUrl>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="9.0.2" />
        <PackageReference Include="Microsoft.AspNetCore.SpaProxy">
            <Version>9.*-*</Version>
        </PackageReference>
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\Frontend\Frontend.esproj">
            <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
        </ProjectReference>
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\Application\Application.csproj"/>
        <ProjectReference Include="..\Domain\Domain.csproj"/>
        <ProjectReference Include="..\Infrastructure\Infrastructure.csproj"/>
        <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="9.0.2">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="NSwag.AspNetCore" Version="14.2.0"/>
        <PackageReference Include="NSwag.MSBuild" Version="14.2.0">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
    </ItemGroup>

    <ItemGroup>
        <None Update="nswag.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>

    <Target Name="GenerateSwaggerJson" BeforeTargets="GenerateTypeScriptModels">
        <PropertyGroup>
            <BuildConfiguration>$(Configuration)</BuildConfiguration>
            <!-- Default to Release if not set -->
            <BuildConfiguration Condition="'$(BuildConfiguration)' == ''">Release</BuildConfiguration>
        </PropertyGroup>
        <!-- Update the command to use the correct configuration -->
        <Exec Command="$(NSwagExe_Net90) run nswag.json /variables:Configuration=$(BuildConfiguration)" />
    </Target>
    
    <Target Name="GenerateTypeScriptModels" BeforeTargets="Build">
        <PropertyGroup>
            <SwaggerFile>$([System.IO.Path]::Combine($(ProjectDir), 'swagger.json'))</SwaggerFile>
            <ModelsDir>$([System.IO.Path]::Combine($(ProjectDir), '..', 'Frontend', 'src', 'api', 'generated'))</ModelsDir>
        </PropertyGroup>
        <MakeDir Directories="$(ModelsDir)"/>
        <Exec WorkingDirectory="$(ProjectDir)" Command="$(NSwagExe_Net90) openapi2tsclient /input:$(SwaggerFile) /output:$(ModelsDir)/models.ts /Template:Fetch /generateClientClasses:false /typeStyle:Interface /dateTimeType:Date /markOptionalProperties:true /nullValue:undefined /generateOptionalParameters:true"/>
    </Target>

    <Target Name="BuildReactApp" BeforeTargets="Build">
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install"/>
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build"/>
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**"/>
            <Content Remove="$(SpaRoot)**"/>
            <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**"/>
        </ItemGroup>
        <Copy SourceFiles="@(DistFiles)" DestinationFolder="wwwroot\%(RecursiveDir)"/>
    </Target>
</Project>